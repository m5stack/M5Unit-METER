name: ArduinoBuild(platform-version 3.x)

env:
  SKETCH_NAMES_FIND_START: ./examples/UnitUnified
  REQUIRED_LIBRARIES: M5Unified
#  M5UNITUNIFIED_BRANCH: main
  M5UNITUNIFIED_BRANCH: develop

on:
  push:
    paths:
      - '**.ino'
      - '**.cpp'
      - '**.hpp'
      - '**.h'
      - '**.c'
      - '**ArduinoBuild_3.yml'
  pull_request:
    paths:
      - '**.ino'
      - '**.cpp'
      - '**.hpp'
      - '**.h'
      - '**.c'
      - '**ArduinoBuild_3.yml'
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.unit }}:${{ matrix.sketch }}:${{matrix.board}}@${{matrix.platform-version}}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      #max-parallel: 1
      matrix:
        platform-url:
          - https://espressif.github.io/arduino-esp32/package_esp32_index.json

        unit:
          - UnitAmeter
          - UnitVmeter

        sketch:
          - PlotToSerial

        board:
          - m5stack_core
          - m5stack_core2
          - m5stack_atoms3
          - m5stack_cores3
          - m5stack_dial
          - m5stack_nanoc6
          - m5stack_paper
          - m5stack_stickc_plus

        platform-version:
          #- 3.0.0
          #- 3.0.1
          #- 3.0.2
          #- 3.0.3
          - 3.0.4

        platform:
          - esp32

        archi:
          - esp32

    steps:

      - name: Running on GitHub Actions
        if: env.ACT != 'true'
        run: echo "This is running on GitHub Actions."

      - name: Running locally with act
        if: env.ACT == 'true'
        run: echo "This is running locally with act."

#      - name: Configure git for authentication (Until each repository is published)
#        run: |
#          git config --global url."https://${{ secrets.TOKEN_M5UNITUNIFIED }}@github.com/".insteadOf "https://github.com/"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      # Checkout library from specific URL and branch
      # Note that dependent libraries are not automatically installed.


      - name: Checkout M5Utility
        uses: actions/checkout@v3
        with:
          repository: m5stack/M5Utility
          ref: ${{ env.M5UNITUNIFIED_BRANCH }}
          path: CustomLibrary_M5Utility # must contain string "Custom"
          token: ${{ secrets.TOKEN_M5UNITUNIFIED }} # Only required during development in private repo

      - name: Checkout M5HAL
        uses: actions/checkout@v3
        with:
          repository: m5stack/M5HAL
          ref: ${{ env.M5UNITUNIFIED_BRANCH }}
          path: CustomLibrary_M5HAL # must contain string "Custom"
          token: ${{ secrets.TOKEN_M5UNITUNIFIED }} # Only required during development in private repo

      - name: Checkout M5UnitUnified
        uses: actions/checkout@v3
        with:
          repository: m5stack/M5UnitUnified
          ref: ${{ env.M5UNITUNIFIED_BRANCH }}
          path: CustomLibrary_M5UnitUnified
          token: ${{ secrets.TOKEN_M5UNITUNIFIED }} # Only required during development in private repo

      # Build 
      - name: Compile examples
        uses: ArminJo/arduino-test-compile@master
        with:
          arduino-board-fqbn: ${{ matrix.platform }}:${{ matrix.archi }}:${{ matrix.board }}
          arduino-platform: ${{ matrix.platform }}:${{ matrix.archi }}@${{ matrix.platform-version }}
          platform-url: ${{ matrix.platform-url }}
          required-libraries: ${{ env.REQUIRED_LIBRARIES }}
          extra-arduino-cli-args: ${{ matrix.cli-args }}
          #build-properties: ${{ toJson(matrix.build-properties) }}
          sketch-names: ${{ matrix.sketch }}.ino
          sketch-names-find-start: ${{ env.SKETCH_NAMES_FIND_START }}/${{ matrix.unit }}
          #sketches-exclude: ${{ matrix.sketches-exclude }}

